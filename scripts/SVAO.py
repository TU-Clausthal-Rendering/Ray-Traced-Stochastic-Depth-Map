from pathlib import WindowsPath, PosixPath
from falcor import *

def render_graph_SVAO():
    g = RenderGraph('SVAO')
    g.create_pass('GBufferRaster', 'GBufferRaster', {'outputSize': 'Default', 'samplePattern': 'Center', 'sampleCount': 8, 'useAlphaTest': True, 'adjustShadingNormals': True, 'forceCullMode': False, 'cull': 'Back'})
    g.create_pass('LinearizeDepth', 'LinearizeDepth', {'depthFormat': 'R32Float'})
    g.create_pass('RayShadow', 'RayShadow', {})
    g.create_pass('DepthPeeling', 'DepthPeeling', {'cullMode': 'Back', 'depthFormat': 'D32Float', 'minSeparationDistance': 0.01})
    g.create_pass('GuardBand', 'GuardBand', {'guardBand': 64})
    g.create_pass('ToneMapper', 'ToneMapper', {'outputSize': 'Default', 'useSceneMetadata': True, 'exposureCompensation': 0.0, 'autoExposure': False, 'filmSpeed': 100.0, 'whiteBalance': False, 'whitePoint': 6500.0, 'operator': 'Linear', 'clamp': False, 'whiteMaxLuminance': 1.0, 'whiteScale': 11.199999809265137, 'fNumber': 1.0, 'shutter': 1.0, 'exposureMode': 'AperturePriority'})
    g.create_pass('SVAO', 'SVAO', {'radius': 0.20000000298023224, 'primaryDepthMode': 'SingleDepth', 'secondaryDepthMode': 'StochasticDepth', 'exponent': 2.0, 'rayPipeline': True, 'thickness': 0.0, 'stochMapDivisor': 4, 'dualAO': False, 'alphaTest': True})
    g.create_pass('CrossBilateralBlur0', 'CrossBilateralBlur', {})
    g.create_pass('DiffuseRef', 'ImageEquation', {'formula': 'I0[xy].r * I1[xy]', 'format': 'RGBA32Float'})
    g.create_pass('AmbientRef', 'ImageEquation', {'formula': 'I0[xy].rrra', 'format': 'RGBA32Float'})
    g.create_pass('DepthPass', 'DepthPass', {'depthFormat': 'D32Float', 'useAlphaTest': True, 'cullMode': 'Back'})
    g.create_pass('ZMipmaps', 'ZMipmaps', {'mipLevels': -1, 'threshold': 0.8999999761581421})
    g.create_pass('DiffuseTAA', 'TAA', {'alpha': 0.10000000149011612, 'colorBoxSigma': 1.0, 'antiFlicker': True})
    g.create_pass('AmbientTAA', 'TAA', {'alpha': 0.10000000149011612, 'colorBoxSigma': 1.0, 'antiFlicker': True})
    g.create_pass('ForwardLighting', 'ForwardLighting', {'envMapIntensity': 0.25, 'ambientIntensity': 0.25, 'lightIntensity': 0.5, 'envMapMirror': False})
    g.create_pass('EnvMapPass', 'EnvMapPass', {})
    g.create_pass('CompressNormals', 'CompressNormals', {'viewSpace': True, 'use16Bit': True})
    g.create_pass('AccumulatePass', 'AccumulatePass', {'enabled': True, 'outputSize': 'Default', 'autoReset': True, 'precisionMode': 'Single', 'maxFrameCount': 0, 'overflowMode': 'Stop'})
    g.create_pass('PathBenchmark', 'PathBenchmark', {})
    g.create_pass('AOFlickerMask', 'AOFlickerMask', {})
    g.create_pass('TemporalAO', 'TemporalAO', {'enabled': False, 'useStableMask': True})
    g.create_pass('AOSwitch', 'Switch', {'count': 2, 'selected': 1, 'i0': 'Default', 'i1': 'TemporalAO'})
    g.create_pass('BinaryDilation', 'BinaryDilation', {'op': 'min'})
    g.create_pass('VideoRecorder', 'VideoRecorder', {})
    g.create_pass('LinearizeDepth0', 'LinearizeDepth', {'depthFormat': 'R32Float'})
    g.add_edge('GBufferRaster.posW', 'RayShadow.posW')
    g.add_edge('GBufferRaster.normW', 'RayShadow.normalW')
    g.add_edge('GBufferRaster.depth', 'LinearizeDepth.depth')
    g.add_edge('ZMipmaps.linearZMip', 'SVAO.depth')
    g.add_edge('GBufferRaster.depth', 'SVAO.gbufferDepth')
    g.add_edge('ToneMapper.dst', 'SVAO.color')
    g.add_edge('LinearizeDepth.linearDepth', 'DepthPeeling.linearZ')
    g.add_edge('GuardBand', 'GBufferRaster')
    g.add_edge('SVAO.ao', 'CrossBilateralBlur0.color')
    g.add_edge('LinearizeDepth.linearDepth', 'CrossBilateralBlur0.linear depth')
    g.add_edge('ToneMapper.dst', 'DiffuseRef.I1')
    g.add_edge('DepthPass', 'GBufferRaster')
    g.add_edge('LinearizeDepth.linearDepth', 'ZMipmaps.linearZ')
    g.add_edge('DiffuseRef.out', 'DiffuseTAA.colorIn')
    g.add_edge('AmbientRef.out', 'AmbientTAA.colorIn')
    g.add_edge('GBufferRaster.mvec', 'AmbientTAA.motionVecs')
    g.add_edge('GBufferRaster.mvec', 'DiffuseTAA.motionVecs')
    g.add_edge('GBufferRaster.depth', 'ForwardLighting.depth')
    g.add_edge('GBufferRaster.depth', 'EnvMapPass.depth')
    g.add_edge('EnvMapPass.color', 'ForwardLighting.color')
    g.add_edge('ForwardLighting.color', 'ToneMapper.src')
    g.add_edge('GBufferRaster.faceNormalW', 'CompressNormals.normalW')
    g.add_edge('DiffuseRef.out', 'AccumulatePass.input')
    g.add_edge('RayShadow.visibility', 'ForwardLighting.visibilityBuffer')
    g.add_edge('DiffuseTAA', 'PathBenchmark')
    g.add_edge('LinearizeDepth.linearDepth', 'AOFlickerMask.linearZ')
    g.add_edge('GBufferRaster.faceNormalW', 'AOFlickerMask.normalW')
    g.add_edge('CrossBilateralBlur0.colorOut', 'TemporalAO.aoIn')
    g.add_edge('LinearizeDepth.linearDepth', 'TemporalAO.linearZ')
    g.add_edge('GBufferRaster.mvec', 'TemporalAO.mvec')
    g.add_edge('CrossBilateralBlur0.colorOut', 'AOSwitch.i0')
    g.add_edge('TemporalAO.aoOut', 'AOSwitch.i1')
    g.add_edge('AOSwitch.out', 'AmbientRef.I0')
    g.add_edge('AOSwitch.out', 'DiffuseRef.I0')
    g.add_edge('AOFlickerMask.mask', 'BinaryDilation.input')
    g.add_edge('BinaryDilation.output', 'TemporalAO.stableMask')
    g.add_edge('VideoRecorder', 'GBufferRaster')
    g.add_edge('DepthPeeling.depth2', 'LinearizeDepth0.depth')
    g.add_edge('LinearizeDepth0.linearDepth', 'SVAO.depth2')
    g.add_edge('CompressNormals.normalOut', 'SVAO.normals')
    g.mark_output('AmbientRef.out')
    g.mark_output('DiffuseRef.out')
    g.mark_output('AmbientTAA.colorOut')
    g.mark_output('DiffuseTAA.colorOut')
    g.mark_output('SVAO.internalRayMax')
    g.mark_output('AccumulatePass.output')
    return g

SVAO = render_graph_SVAO()
try: m.addGraph(SVAO)
except NameError: None
